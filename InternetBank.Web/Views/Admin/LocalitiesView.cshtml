@{
    ViewBag.Title = "Localities";
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
}

<script type="text/javascript" src="@Url.Content("~/Scripts/EntitiesViewBaseModel.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/CustomGrid.js")"></script>

<style>
    table.customGrid tbody tr.selected {
        background-color: lightgray;
    }
</style>

<h2>Области и города</h2>

<div data-bind="with: regionsGrid">
    <input type="button" data-bind="click: addRegion" value="Добавить" />
    <div data-bind="with: grid">
    @Html.Partial("_PartialCustomGrid")
    </div>
</div>

<!-- ko if: regionsGrid.grid.selectedRow() != null -->
<h2 data-bind="text: 'Города: ' + regionsGrid.grid.selectedRow().Name.value()"></h2>
<div data-bind="with: citiesGrid">
    <!-- ko if: $parent.regionsGrid.grid.selectedRow().Id.value() > 0 -->
    <input type="button" data-bind="click: addCity" value="Добавить" />
    <!-- /ko -->
    <div data-bind="with: grid">
    @Html.Partial("_PartialCustomGrid")
    </div>
</div>
<!-- /ko -->

<script type="text/javascript">
    (function (w)
    {
        @*var resources = window.ResourceManager.getResources(@Html.Raw(ViewBag.Resources));
        var settings = JSON.parse('@Html.Raw(Model.Settings.AsJson)');*@

        var viewModel = new function () {
            var self = this;

            self.regionsGrid = new EntitiesViewBaseModel(
                "Region",
                function ()
                {
                    return {
                        Id: 0,
                        Name: ''
                    };
                },
                [
                    {
                        field: "Name",
                        type: CustomGrid.columnTypes.string,
                        text: 'Название'
                    }
                ]
            );
            self.regionsGrid.grid.selectedRow.subscribe(function (region)
            {
                if (region && region.Id.value() > 0)
                    window.AdminDataProvider.GetCities(
                        region.Id.value(),
                        function (data)
                        {
                            self.citiesGrid.grid.rows(CustomGrid.mapToModels(data));
                        },
                        function ()
                        {
                            alert('error');
                        }
                    );
                else
                    self.citiesGrid.grid.rows([]);
            });

            self.citiesGrid = new EntitiesViewBaseModel(
                "City",
                function ()
                {
                    return {
                        Id: 0,
                        Name: '',
                        RegionId: self.regionsGrid.grid.selectedRow().Id.value()
                    };
                },
                [
                    {
                        field: "Name",
                        type: CustomGrid.columnTypes.string,
                        text: 'Название'
                    }
                ]
            );

            var init = function ()
            {
                window.AdminDataProvider.GetRegions(
                    function (data)
                    {
                        self.regionsGrid.grid.rows(CustomGrid.mapToModels(data));
                    },
                    function ()
                    {
                        alert('error');
                    }
                );
            };

            init();

            return self;
        };
        ko.applyBindings(viewModel);

    })(window);
</script>
