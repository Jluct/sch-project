@{
    ViewBag.Title = "Localities";
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
}

<script type="text/javascript" src="@Url.Content("~/Scripts/EntitiesViewBaseModel.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/CustomGrid.js")"></script>

<h2>Типы карточек</h2>

<div data-bind="with: cardTypes">
    <input type="button" data-bind="click: addCardType" value="Добавить" />
    <div data-bind="with: grid">
    @Html.Partial("_PartialCustomGrid")
    </div>
</div>


@*
<div data-bind="with: cardTypes">
    <input type="button" data-bind="click: addRegion" value="Добавить" />
    <div data-bind="with: grid">
    @Html.Partial("_PartialCustomGrid")
    </div>
</div>
*@

<script type="text/javascript">
    (function (w)
    {
        @*var resources = window.ResourceManager.getResources(@Html.Raw(ViewBag.Resources));
        var settings = JSON.parse('@Html.Raw(Model.Settings.AsJson)');*@

        var viewModel = new function () {
            var self = this;

            self.cardTypes = new EntitiesViewBaseModel(
                "CardType",
                function ()
                {
                    return {
                        Id: 0,
                        Name: '',
                        IconName: ''
                    };
                },
                [
                    {
                        field: "Name",
                        type: CustomGrid.columnTypes.string,
                        text: 'Имя карты'
                    },
                    {
                        field: "IconName",
                        type: CustomGrid.columnTypes.image,
                        renderer: function (row, column)
                        {
                            return "<img src='"+row.IconName.value()+"' width='200' />";
                        },
                        text: 'Картинка'
                    }
                ]
            );

            //self.regionsGrid.grid.onBeginEditRow.subscribe(function (region)
            //{
            //    if (region.Id.value() > 0)
            //        window.AdminDataProvider.GetCities(
            //            region.Id.value(),
            //            function (data)
            //            {
            //                self.citiesGrid.grid.rows(CustomGrid.mapToModels(data));
            //            },
            //            function ()
            //            {
            //                alert('error');
            //            }
            //        );
            //    else
            //        self.citiesGrid.grid.rows([]);
            //});

            //self.citiesGrid = new EntitiesViewBaseModel(
            //    "City",
            //    function ()
            //    {
            //        return {
            //            Id: 0,
            //            Name: '',
            //            RegionId: self.regionsGrid.grid.editingItem().Id.value()
            //        };
            //    },
            //    [
            //        {
            //            field: "Name",
            //            type: CustomGrid.columnTypes.string
            //        }
            //    ]
            //);

            var init = function ()
            {
                window.AdminDataProvider.GetCardTypes(
                    function (data)
                    {
                        self.cardTypes.grid.rows(CustomGrid.mapToModels(JSON.parse(data)));
                    },
                    function ()
                    {
                        alert('error');
                    }
                );
            };

            init();

            return self;
        };
        ko.applyBindings(viewModel);

    })(window);
</script>
